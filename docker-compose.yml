version: '3.8'

services:
  db:
    image: postgres:13-alpine
    container_name: ${PROJECT}_db
    volumes:
      - ./.pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${PROJECT}
    restart: always

  common:
    container_name: ${PROJECT}_common
    build:
      context: ./packages/common
      dockerfile: Dockerfile.dev
    volumes:
      - ./packages/common:/project/packages/common
      - ./:/project

  api:
    container_name: ${PROJECT}_api
    build:
      context: ./apps/api
      dockerfile: Dockerfile.dev
    volumes:
      - ./:/project
    ports:
      - '4000:4000'
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${PROJECT}
      - POSTGRES_HOST=db
    env_file:
      - ./.env
    depends_on:
      - common
      - db

  web:
    container_name: ${PROJECT}_web
    build:
      context: ./apps/web
      dockerfile: Dockerfile.dev
    volumes:
      - ./:/project
    ports:
      - '3000:3000'
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NODE_ENV=development
      - RUNTIME_ENV=local
    depends_on:
      - api

networks:
  local:
    driver: bridge
