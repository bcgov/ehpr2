version: '3.8'

services:
  db:
    image: postgres:13-alpine
    container_name: ${PROJECT}_db
    volumes:
      - ./.pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE}
    restart: always
    networks:
      - local
  api:
    image: ${PROJECT}_base
    container_name: ${PROJECT}_api
    build:
      context: ./
      dockerfile: Dockerfile
    command: 'yarn watch:api'
    volumes:
      - ./apps/api:/apps/api
      - '/apps/api/node_modules'
      - ./packages/common:/packages/common
      - '/packages/common/node_modules'
    ports:
      - '4000:4000'
    env_file:
      - ./.env
    depends_on:
      - db
    networks:
      - local

  web:
    image: ${PROJECT}_base
    container_name: ${PROJECT}_web
    build:
      context: ./
      dockerfile: Dockerfile
    command: 'yarn watch:web'
    volumes:
      - ./apps/web:/apps/web
      - '/apps/web/node_modules'
      - ./packages/common:/packages/common
      - '/packages/common/node_modules'
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - RUNTIME_ENV=local
    depends_on:
      - api
networks:
  local:
    driver: bridge
